const canvas=document.querySelector("#game"),ctx=canvas.getContext("2d"),canvasWidth=canvas.clientWidth,canvasHeight=canvas.clientHeight;let gameLoop=setInterval(game,1),Wall=function(){this.w=canvasWidth/20,this.h=20,this.color="#1e2a78",this.brickPos={},this.sideCollision=null,this.buildWall=function(){let id=0;for(let i=0;i<5;i++)for(let j=0;j<20;j++)this.createBrick(j,i,id),id++},this.createBrick=function(x,y,id){this.brickPos[id]={x:x*this.w,y:y*this.h}},this.showBricks=function(){ctx.fillStyle=this.color;for(let b in this.brickPos){let el=this.brickPos[b];ctx.fillRect(el.x,el.y,this.w,this.h)}},this.removeBrick=function(id){delete this.brickPos[id]},this.getBrickPos=function(x,y){let id=null;for(let b in this.brickPos){let el=this.brickPos[b];el.x===x&&el.y===y&&(id=b)}return id},this.getSide=function(){return this.sideCollision},this.wallCollision=function(ball){let ballPosition=ball.getPosition();for(const b in this.brickPos){let testX=ballPosition.x,testY=ballPosition.y,w=this.brickPos[b];if(ballPosition.x<w.x?testX=w.x:ballPosition.x>w.x+this.w&&(testX=w.x+this.w),ballPosition.y<w.y?testY=w.y:ballPosition.y>w.y+this.h&&(testY=w.y+this.h),distX=ballPosition.x-testX,distY=ballPosition.y-testY,distance=Math.sqrt(distX*distX+distY*distY),distance<=ball.getSize())return ballPosition.x!==testX?this.sideCollision="y":this.sideCollision="x",this.removeBrick(b),!0}return!1}};const Ball=function(){this.size=10,this.dx=2,this.dy=-1,this.position={x:canvas.clientWidth/2,y:canvas.clientHeight-this.size-50},this.create=function(){ctx.arc(this.position.x,this.position.y,this.size,0,2*Math.PI),ctx.fill()},this.show=function(){ctx.beginPath(),ctx.arc(this.position.x,this.position.y,this.size,0,2*Math.PI),ctx.fill()},this.move=function(){this.position.x+=this.dx,this.position.y+=this.dy,this.checkCollision()},this.checkCollision=function(){this.position.x+this.size>canvas.clientWidth||this.position.x-this.size<0?this.dx*=-1:this.position.y-this.size<0?this.dy*=-1:this.position.y+this.size>canvas.clientHeight&&this.gameOver()},this.gameOver=function(){this.size=0,clearInterval(gameLoop),ctx.fillStyle="black",ctx.font="90px Arial",ctx.fillText("You lose!",(canvasWidth-360)/2,canvasHeight/2)},this.changeDirection=function(side){"x"==side?this.dy*=-1:this.dx*=-1},this.getPosition=function(){return this.position},this.getSize=function(){return this.size}},Paddle=function(){this.width=150,this.height=10,this.speed=3,this.color="red",this.position={x:canvasWidth/2,y:canvasHeight-this.height},this.show=function(){ctx.fillStyle=this.color,ctx.fillRect(this.position.x,this.position.y-15,this.width,this.height)},this.move=function(direction){65===direction?this.position.x-=this.speed:68===direction&&(this.position.x+=this.speed),this.speed+=2,this.speed>=30&&(this.speed=30)},this.stopMove=function(){this.speed=3},this.checkWallCollision=function(){this.position.x+this.width+10>canvasWidth?this.position.x=canvasWidth-this.width:this.position.x+10<0&&(this.position.x=0)},this.checkBallCollision=function(ball){let ballPosition=ball.getPosition(),ballX=ballPosition.x,ballY=ballPosition.y,paddle=this.position;return ballPosition.y+2*ball.size>=paddle.y&&ballPosition.x+2*ball.size>=paddle.x&&ballPosition.x<=paddle.x+this.width}};let w=new Wall;w.buildWall();let b=new Ball;b.create();let p=new Paddle;function keyPressEvent(event){p.move(event.keyCode)}function keyUpEvent(event){p.stopMove()}function game(){ctx.clearRect(0,0,canvas.clientWidth,canvas.clientHeight),w.showBricks(),b.move(),w.wallCollision(b)&&b.changeDirection(w.getSide()),b.show(),p.checkWallCollision(),p.checkBallCollision(b)&&b.changeDirection("x"),p.show()}document.addEventListener("keydown",keyPressEvent),document.addEventListener("keyup",keyUpEvent);